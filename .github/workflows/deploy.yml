name: Deploy Flask App
on:
  push:
    branches:
      - main
jobs:
  deploy:
    runs-on: ubuntu-latest
    environment: production
    steps:
      - name: Deploy to production server
        uses: appleboy/ssh-action@master
        with:
          host: ${{ secrets.SERVER_HOST }}
          username: ${{ secrets.SERVER_USERNAME }}
          key: ${{ secrets.SSH_PRIVATE_KEY }}
          script: |
            if [ -d "/app" ]; then
              cd /app
              git fetch origin main
              git reset --hard origin/main
            else
              mkdir -p /app
              git clone https://github.com/LorenzoPeve/rag-reddit.git /app
              cd /app
            fi
            
            # Stop existing containers
            docker compose -f docker/docker-compose.prod.yml -p rag-reddit down
            
            # Export variables to avoid shell escaping issues
            export REDDIT_USER='${{ secrets.REDDIT_USER }}'
            export REDDIT_USER_PASSWORD='${{ secrets.REDDIT_USER_PASSWORD }}'
            export REDDIT_CLIENT_ID='${{ secrets.REDDIT_CLIENT_ID }}'
            export REDDIT_CLIENT_SECRET='${{ secrets.REDDIT_CLIENT_SECRET }}'
            export USER_AGENT='${{ secrets.USER_AGENT }}'
            export POSTGRES_DB='${{ secrets.POSTGRES_DB }}'
            export POSTGRES_USER='${{ secrets.POSTGRES_USER }}'
            export POSTGRES_PASSWORD='${{ secrets.POSTGRES_PASSWORD }}'
            export POSTGRES_HOST='${{ secrets.POSTGRES_HOST }}'
            export POSTGRES_PORT='${{ secrets.POSTGRES_PORT }}'
            export OPENAI_API_KEY='${{ secrets.OPENAI_API_KEY }}'
            export OPENAI_ENCODER='cl100k_base'
            export OPENAI_EMBEDDING_MODEL='text-embedding-3-small'
            export OPENAI_EMBEDDING_MODEL_TOKEN_LIMIT='8191'
            export CHUNK_SIZE='1200'
            export CHUNK_OVERLAP='120'
            
            # Start containers using exported variables
            docker compose -f docker/docker-compose.prod.yml -p rag-reddit up -d --build

            # Wait for containers to be ready
            sleep 10
            
            # Run database connection test
            docker exec gunicorn pytest -s -vv /app/tests/test_db.py::test_database_connection